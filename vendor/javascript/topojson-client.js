// topojson-client@3.1.0 downloaded from https://ga.jspm.io/npm:topojson-client@3.1.0/dist/topojson-client.js

var e="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:global;var t={};(function(e,r){r(t)})(t,(function(t){function identity(e){return e}function transform(e){if(null==e)return identity;var t,r,n=e.scale[0],o=e.scale[1],a=e.translate[0],i=e.translate[1];return function(e,c){c||(t=r=0);var u=2,s=e.length,f=new Array(s);f[0]=(t+=e[0])*n+a;f[1]=(r+=e[1])*o+i;while(u<s)f[u]=e[u],++u;return f}}function bbox(e){var t=transform(e.transform),r,n=Infinity,o=n,a=-n,i=-n;function bboxPoint(e){e=t(e);e[0]<n&&(n=e[0]);e[0]>a&&(a=e[0]);e[1]<o&&(o=e[1]);e[1]>i&&(i=e[1])}function bboxGeometry(e){switch(e.type){case"GeometryCollection":e.geometries.forEach(bboxGeometry);break;case"Point":bboxPoint(e.coordinates);break;case"MultiPoint":e.coordinates.forEach(bboxPoint);break}}e.arcs.forEach((function(e){var r=-1,c=e.length,u;while(++r<c){u=t(e[r],r);u[0]<n&&(n=u[0]);u[0]>a&&(a=u[0]);u[1]<o&&(o=u[1]);u[1]>i&&(i=u[1])}}));for(r in e.objects)bboxGeometry(e.objects[r]);return[n,o,a,i]}function reverse(e,t){var r,n=e.length,o=n-t;while(o<--n)r=e[o],e[o++]=e[n],e[n]=r}function feature(e,t){"string"===typeof t&&(t=e.objects[t]);return"GeometryCollection"===t.type?{type:"FeatureCollection",features:t.geometries.map((function(t){return feature$1(e,t)}))}:feature$1(e,t)}function feature$1(e,t){var r=t.id,n=t.bbox,o=null==t.properties?{}:t.properties,a=object(e,t);return null==r&&null==n?{type:"Feature",properties:o,geometry:a}:null==n?{type:"Feature",id:r,properties:o,geometry:a}:{type:"Feature",id:r,bbox:n,properties:o,geometry:a}}function object(e,t){var r=transform(e.transform),n=e.arcs;function arc(e,t){t.length&&t.pop();for(var o=n[e<0?~e:e],a=0,i=o.length;a<i;++a)t.push(r(o[a],a));e<0&&reverse(t,i)}function point(e){return r(e)}function line(e){var t=[];for(var r=0,n=e.length;r<n;++r)arc(e[r],t);t.length<2&&t.push(t[0]);return t}function ring(e){var t=line(e);while(t.length<4)t.push(t[0]);return t}function polygon(e){return e.map(ring)}function geometry(e){var t=e.type,r;switch(t){case"GeometryCollection":return{type:t,geometries:e.geometries.map(geometry)};case"Point":r=point(e.coordinates);break;case"MultiPoint":r=e.coordinates.map(point);break;case"LineString":r=line(e.arcs);break;case"MultiLineString":r=e.arcs.map(line);break;case"Polygon":r=polygon(e.arcs);break;case"MultiPolygon":r=e.arcs.map(polygon);break;default:return null}return{type:t,coordinates:r}}return geometry(t)}function stitch(e,t){var r={},n={},o={},a=[],i=-1;t.forEach((function(r,n){var o=e.arcs[r<0?~r:r],a;o.length<3&&!o[1][0]&&!o[1][1]&&(a=t[++i],t[i]=r,t[n]=a)}));t.forEach((function(e){var t=ends(e),r=t[0],a=t[1],i,c;if(i=o[r]){delete o[i.end];i.push(e);i.end=a;if(c=n[a]){delete n[c.start];var u=c===i?i:i.concat(c);n[u.start=i.start]=o[u.end=c.end]=u}else n[i.start]=o[i.end]=i}else if(i=n[a]){delete n[i.start];i.unshift(e);i.start=r;if(c=o[r]){delete o[c.end];var s=c===i?i:c.concat(i);n[s.start=c.start]=o[s.end=i.end]=s}else n[i.start]=o[i.end]=i}else{i=[e];n[i.start=r]=o[i.end=a]=i}}));function ends(t){var r=e.arcs[t<0?~t:t],n=r[0],o;e.transform?(o=[0,0],r.forEach((function(e){o[0]+=e[0],o[1]+=e[1]}))):o=r[r.length-1];return t<0?[o,n]:[n,o]}function flush(e,t){for(var n in e){var o=e[n];delete t[o.start];delete o.start;delete o.end;o.forEach((function(e){r[e<0?~e:e]=1}));a.push(o)}}flush(o,n);flush(n,o);t.forEach((function(e){r[e<0?~e:e]||a.push([e])}));return a}function mesh(t){return object(t,meshArcs.apply(this||e,arguments))}function meshArcs(e,t,r){var n,o,a;if(arguments.length>1)n=extractArcs(e,t,r);else for(o=0,n=new Array(a=e.arcs.length);o<a;++o)n[o]=o;return{type:"MultiLineString",arcs:stitch(e,n)}}function extractArcs(e,t,r){var n=[],o=[],a;function extract0(e){var t=e<0?~e:e;(o[t]||(o[t]=[])).push({i:e,g:a})}function extract1(e){e.forEach(extract0)}function extract2(e){e.forEach(extract1)}function extract3(e){e.forEach(extract2)}function geometry(e){switch(a=e,e.type){case"GeometryCollection":e.geometries.forEach(geometry);break;case"LineString":extract1(e.arcs);break;case"MultiLineString":case"Polygon":extract2(e.arcs);break;case"MultiPolygon":extract3(e.arcs);break}}geometry(t);o.forEach(null==r?function(e){n.push(e[0].i)}:function(e){r(e[0].g,e[e.length-1].g)&&n.push(e[0].i)});return n}function planarRingArea(e){var t=-1,r=e.length,n,o=e[r-1],a=0;while(++t<r)n=o,o=e[t],a+=n[0]*o[1]-n[1]*o[0];return Math.abs(a)}function merge(t){return object(t,mergeArcs.apply(this||e,arguments))}function mergeArcs(e,t){var r={},n=[],o=[];t.forEach(geometry);function geometry(e){switch(e.type){case"GeometryCollection":e.geometries.forEach(geometry);break;case"Polygon":extract(e.arcs);break;case"MultiPolygon":e.arcs.forEach(extract);break}}function extract(e){e.forEach((function(t){t.forEach((function(t){(r[t=t<0?~t:t]||(r[t]=[])).push(e)}))}));n.push(e)}function area(t){return planarRingArea(object(e,{type:"Polygon",arcs:[t]}).coordinates[0])}n.forEach((function(e){if(!e._){var t=[],n=[e];e._=1;o.push(t);while(e=n.pop()){t.push(e);e.forEach((function(e){e.forEach((function(e){r[e<0?~e:e].forEach((function(e){if(!e._){e._=1;n.push(e)}}))}))}))}}}));n.forEach((function(e){delete e._}));return{type:"MultiPolygon",arcs:o.map((function(t){var n=[],o;t.forEach((function(e){e.forEach((function(e){e.forEach((function(e){r[e<0?~e:e].length<2&&n.push(e)}))}))}));n=stitch(e,n);if((o=n.length)>1)for(var a=1,i=area(n[0]),c,u;a<o;++a)(c=area(n[a]))>i&&(u=n[0],n[0]=n[a],n[a]=u,i=c);return n})).filter((function(e){return e.length>0}))}}function bisect(e,t){var r=0,n=e.length;while(r<n){var o=r+n>>>1;e[o]<t?r=o+1:n=o}return r}function neighbors(e){var t={},r=e.map((function(){return[]}));function line(e,r){e.forEach((function(e){e<0&&(e=~e);var n=t[e];n?n.push(r):t[e]=[r]}))}function polygon(e,t){e.forEach((function(e){line(e,t)}))}function geometry(e,t){"GeometryCollection"===e.type?e.geometries.forEach((function(e){geometry(e,t)})):e.type in n&&n[e.type](e.arcs,t)}var n={LineString:line,MultiLineString:polygon,Polygon:polygon,MultiPolygon:function(e,t){e.forEach((function(e){polygon(e,t)}))}};e.forEach(geometry);for(var o in t)for(var a=t[o],i=a.length,c=0;c<i;++c)for(var u=c+1;u<i;++u){var s=a[c],f=a[u],l;(l=r[s])[o=bisect(l,f)]!==f&&l.splice(o,0,f);(l=r[f])[o=bisect(l,s)]!==s&&l.splice(o,0,s)}return r}function untransform(e){if(null==e)return identity;var t,r,n=e.scale[0],o=e.scale[1],a=e.translate[0],i=e.translate[1];return function(e,c){c||(t=r=0);var u=2,s=e.length,f=new Array(s),l=Math.round((e[0]-a)/n),h=Math.round((e[1]-i)/o);f[0]=l-t,t=l;f[1]=h-r,r=h;while(u<s)f[u]=e[u],++u;return f}}function quantize(e,t){if(e.transform)throw new Error("already quantized");if(t&&t.scale)u=e.bbox;else{if(!((i=Math.floor(t))>=2))throw new Error("n must be â‰¥2");u=e.bbox||bbox(e);var r=u[0],n=u[1],o=u[2],a=u[3],i;t={scale:[o-r?(o-r)/(i-1):1,a-n?(a-n)/(i-1):1],translate:[r,n]}}var c=untransform(t),u,s,f=e.objects,l={};function quantizePoint(e){return c(e)}function quantizeGeometry(e){var t;switch(e.type){case"GeometryCollection":t={type:"GeometryCollection",geometries:e.geometries.map(quantizeGeometry)};break;case"Point":t={type:"Point",coordinates:quantizePoint(e.coordinates)};break;case"MultiPoint":t={type:"MultiPoint",coordinates:e.coordinates.map(quantizePoint)};break;default:return e}null!=e.id&&(t.id=e.id);null!=e.bbox&&(t.bbox=e.bbox);null!=e.properties&&(t.properties=e.properties);return t}function quantizeArc(e){var t=0,r=1,n=e.length,o,a=new Array(n);a[0]=c(e[0],0);while(++t<n)((o=c(e[t],t))[0]||o[1])&&(a[r++]=o);1===r&&(a[r++]=[0,0]);a.length=r;return a}for(s in f)l[s]=quantizeGeometry(f[s]);return{type:"Topology",bbox:u,transform:t,objects:l,arcs:e.arcs.map(quantizeArc)}}t.bbox=bbox;t.feature=feature;t.merge=merge;t.mergeArcs=mergeArcs;t.mesh=mesh;t.meshArcs=meshArcs;t.neighbors=neighbors;t.quantize=quantize;t.transform=transform;t.untransform=untransform;Object.defineProperty(t,"__esModule",{value:true})}));const r=t.bbox,n=t.feature,o=t.merge,a=t.mergeArcs,i=t.mesh,c=t.meshArcs,u=t.neighbors,s=t.quantize,f=t.transform,l=t.untransform,h=t.__esModule;export default t;export{h as __esModule,r as bbox,n as feature,o as merge,a as mergeArcs,i as mesh,c as meshArcs,u as neighbors,s as quantize,f as transform,l as untransform};

